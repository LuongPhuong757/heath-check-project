name: Deploy to EC2

on:
  push:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          npm install --save-dev @typescript-eslint/parser @typescript-eslint/eslint-plugin eslint

      - name: Run linting
        run: npm run lint

      - name: Run unit tests
        run: npm run test

  build-and-push-docker:
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/health-check-api:latest
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/health-check-api:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/health-check-api:buildcache,mode=max

  deploy-to-ec2:
    needs: build-and-push-docker
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ec2-18-140-28-171.ap-southeast-1.compute.amazonaws.com
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Update system
            sudo yum update -y

            # Install Docker if not installed
            if ! command -v docker &> /dev/null; then
              sudo yum install -y docker
              sudo service docker start
              sudo usermod -a -G docker ec2-user
            fi

            # Start Docker service
            sudo systemctl start docker
            sudo systemctl enable docker

            # Add current user to docker group
            sudo usermod -aG docker $USER
            newgrp docker

            # Create .env file
            cat > .env << EOL
            PORT=3003
            NODE_ENV=production
            # Add other environment variables here
            EOL

            # Pull and run Docker container
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/health-check-api:latest
            docker stop health-check-api || true
            docker rm health-check-api || true
            docker run -d \
              --name health-check-api \
              -p 3003:3003 \
              --restart unless-stopped \
              --env-file .env \
              ${{ secrets.DOCKERHUB_USERNAME }}/health-check-api:latest
